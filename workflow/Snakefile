# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.utils import min_version

min_version("8.0")

import pandas as pd
import yaml

# Import configuration files
params = yaml.load(open("config/params.yml", "r"), Loader=yaml.SafeLoader)
features = yaml.load(open("config/features.yml", "r"), Loader=yaml.SafeLoader)
samples = pd.read_table("config/samples.tsv", comment="#", dtype="str")

# Generate useful variables
SAMPLES = samples["sample_id"].drop_duplicates().values.tolist()

SAMPLE_LIBRARY = samples[["sample_id", "library_id"]].values.tolist()

HOST_NAMES = (
    [] if features["references"] is None else list(features["references"].keys())
)

PATHOGENS = [] if features["pathogens"] is None else list(features["pathogens"].keys())

KRAKEN2_DBS = list(features["databases"]["kraken2"].keys())

BAM_REPORTS = ["stats.tsv", "flagstats.txt", "idxstats.tsv"]

LAST_HOST = HOST_NAMES[-1] if len(HOST_NAMES) > 0 else None


# Import subworkflows
include: "rules/folders.smk"
include: "rules/helpers/__main__.smk"
include: "rules/reference/__main__.smk"
include: "rules/reads/__main__.smk"
include: "rules/preprocess/__main__.smk"
include: "rules/kraken2/__main__.smk"
include: "rules/quantify/__main__.smk"
include: "rules/report/__main__.smk"


rule cache:
    """Rule to retrieve files from the cache or to execute them"""
    input:
        rules.reference__recompress.input,
        rules.preprocess__index.input,


rule all:
    input:
        # rules.reads.input,
        # rules.reference.input,
        rules.kraken2.input,
        # rules.quantify.input,
        # rules.report.input,
